{"version":3,"file":"InstallView-CW6G3opp.js","sources":["../../src/components/install/DesktopSettingsConfiguration.vue","../../../../../../assets/images/nvidia-logo.svg","../../../../../../assets/images/apple-mps-logo.png","../../../../../../assets/images/manual-configuration.svg","../../src/components/install/GpuPicker.vue","../../src/components/install/InstallLocationPicker.vue","../../src/components/install/MigrationPicker.vue","../../src/components/install/mirror/MirrorItem.vue","../../src/components/install/MirrorsConfiguration.vue","../../src/views/InstallView.vue"],"sourcesContent":["<template>\n  <div class=\"flex flex-col gap-6 w-[600px]\">\n    <div class=\"flex flex-col gap-4\">\n      <h2 class=\"text-2xl font-semibold text-neutral-100\">\n        {{ $t('install.desktopAppSettings') }}\n      </h2>\n\n      <p class=\"text-neutral-400 my-0\">\n        {{ $t('install.desktopAppSettingsDescription') }}\n      </p>\n    </div>\n\n    <div class=\"flex flex-col bg-neutral-800 p-4 rounded-lg\">\n      <!-- Auto Update Setting -->\n      <div class=\"flex items-center gap-4\">\n        <div class=\"flex-1\">\n          <h3 class=\"text-lg font-medium text-neutral-100\">\n            {{ $t('install.settings.autoUpdate') }}\n          </h3>\n          <p class=\"text-sm text-neutral-400 mt-1\">\n            {{ $t('install.settings.autoUpdateDescription') }}\n          </p>\n        </div>\n        <ToggleSwitch v-model=\"autoUpdate\" />\n      </div>\n\n      <Divider />\n\n      <!-- Metrics Collection Setting -->\n      <div class=\"flex items-center gap-4\">\n        <div class=\"flex-1\">\n          <h3 class=\"text-lg font-medium text-neutral-100\">\n            {{ $t('install.settings.allowMetrics') }}\n          </h3>\n          <p class=\"text-sm text-neutral-400 mt-1\">\n            {{ $t('install.settings.allowMetricsDescription') }}\n          </p>\n          <a\n            href=\"#\"\n            class=\"text-sm text-blue-400 hover:text-blue-300 mt-1 inline-block\"\n            @click.prevent=\"showMetricsInfo\"\n          >\n            {{ $t('install.settings.learnMoreAboutData') }}\n          </a>\n        </div>\n        <ToggleSwitch v-model=\"allowMetrics\" />\n      </div>\n    </div>\n\n    <!-- Info Dialog -->\n    <Dialog\n      v-model:visible=\"showDialog\"\n      modal\n      :header=\"$t('install.settings.dataCollectionDialog.title')\"\n    >\n      <div class=\"text-neutral-300\">\n        <h4 class=\"font-medium mb-2\">\n          {{ $t('install.settings.dataCollectionDialog.whatWeCollect') }}\n        </h4>\n        <ul class=\"list-disc pl-6 space-y-1\">\n          <li>\n            {{\n              $t('install.settings.dataCollectionDialog.collect.errorReports')\n            }}\n          </li>\n          <li>\n            {{ $t('install.settings.dataCollectionDialog.collect.systemInfo') }}\n          </li>\n          <li>\n            {{\n              $t(\n                'install.settings.dataCollectionDialog.collect.userJourneyEvents'\n              )\n            }}\n          </li>\n        </ul>\n\n        <h4 class=\"font-medium mt-4 mb-2\">\n          {{ $t('install.settings.dataCollectionDialog.whatWeDoNotCollect') }}\n        </h4>\n        <ul class=\"list-disc pl-6 space-y-1\">\n          <li>\n            {{\n              $t(\n                'install.settings.dataCollectionDialog.doNotCollect.personalInformation'\n              )\n            }}\n          </li>\n          <li>\n            {{\n              $t(\n                'install.settings.dataCollectionDialog.doNotCollect.workflowContents'\n              )\n            }}\n          </li>\n          <li>\n            {{\n              $t(\n                'install.settings.dataCollectionDialog.doNotCollect.fileSystemInformation'\n              )\n            }}\n          </li>\n          <li>\n            {{\n              $t(\n                'install.settings.dataCollectionDialog.doNotCollect.customNodeConfigurations'\n              )\n            }}\n          </li>\n        </ul>\n\n        <div class=\"mt-4\">\n          <a\n            href=\"https://comfy.org/privacy\"\n            target=\"_blank\"\n            class=\"text-blue-400 hover:text-blue-300 underline\"\n          >\n            {{ $t('install.settings.dataCollectionDialog.viewFullPolicy') }}\n          </a>\n        </div>\n      </div>\n    </Dialog>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport Dialog from 'primevue/dialog'\nimport Divider from 'primevue/divider'\nimport ToggleSwitch from 'primevue/toggleswitch'\nimport { ref } from 'vue'\n\nconst showDialog = ref(false)\nconst autoUpdate = defineModel<boolean>('autoUpdate', { required: true })\nconst allowMetrics = defineModel<boolean>('allowMetrics', { required: true })\n\nconst showMetricsInfo = () => {\n  showDialog.value = true\n}\n</script>\n","export default \"__VITE_PUBLIC_ASSET__fe43f3f5__\"","export default \"__VITE_PUBLIC_ASSET__2bae65e3__\"","export default \"__VITE_PUBLIC_ASSET__57befc1b__\"","<template>\n  <div class=\"flex flex-col gap-6 w-[600px] h-[30rem] select-none\">\n    <!-- Installation Path Section -->\n    <div class=\"grow flex flex-col gap-4 text-neutral-300\">\n      <h2 class=\"text-2xl font-semibold text-neutral-100\">\n        {{ $t('install.gpuSelection.selectGpu') }}\n      </h2>\n\n      <p class=\"m-1 text-neutral-400\">\n        {{ $t('install.gpuSelection.selectGpuDescription') }}:\n      </p>\n\n      <!-- GPU Selection buttons -->\n      <div\n        class=\"flex gap-2 text-center transition-opacity\"\n        :class=\"{ selected: selected }\"\n      >\n        <!-- NVIDIA -->\n        <div\n          v-if=\"platform !== 'darwin'\"\n          class=\"gpu-button\"\n          :class=\"{ selected: selected === 'nvidia' }\"\n          role=\"button\"\n          @click=\"pickGpu('nvidia')\"\n        >\n          <img\n            class=\"m-12\"\n            alt=\"NVIDIA logo\"\n            width=\"196\"\n            height=\"32\"\n            src=\"/assets/images/nvidia-logo.svg\"\n          />\n        </div>\n        <!-- MPS -->\n        <div\n          v-if=\"platform === 'darwin'\"\n          class=\"gpu-button\"\n          :class=\"{ selected: selected === 'mps' }\"\n          role=\"button\"\n          @click=\"pickGpu('mps')\"\n        >\n          <img\n            class=\"rounded-lg hover-brighten\"\n            alt=\"Apple Metal Performance Shaders Logo\"\n            width=\"292\"\n            ratio\n            src=\"/assets/images/apple-mps-logo.png\"\n          />\n        </div>\n        <!-- Manual configuration -->\n        <div\n          class=\"gpu-button\"\n          :class=\"{ selected: selected === 'unsupported' }\"\n          role=\"button\"\n          @click=\"pickGpu('unsupported')\"\n        >\n          <img\n            class=\"m-12\"\n            alt=\"Manual configuration\"\n            width=\"196\"\n            src=\"/assets/images/manual-configuration.svg\"\n          />\n        </div>\n      </div>\n\n      <!-- Details on selected GPU -->\n      <p v-if=\"selected === 'nvidia'\" class=\"m-1\">\n        <Tag icon=\"pi pi-check\" severity=\"success\" :value=\"'CUDA'\" />\n        {{ $t('install.gpuSelection.nvidiaDescription') }}\n      </p>\n\n      <p v-if=\"selected === 'mps'\" class=\"m-1\">\n        <Tag icon=\"pi pi-check\" severity=\"success\" :value=\"'MPS'\" />\n        {{ $t('install.gpuSelection.mpsDescription') }}\n      </p>\n\n      <div v-if=\"selected === 'unsupported'\" class=\"text-neutral-300\">\n        <p class=\"m-1\">\n          <Tag\n            icon=\"pi pi-exclamation-triangle\"\n            severity=\"warn\"\n            :value=\"t('icon.exclamation-triangle')\"\n          />\n          {{ $t('install.gpuSelection.customSkipsPython') }}\n        </p>\n\n        <ul>\n          <li>\n            <strong>\n              {{ $t('install.gpuSelection.customComfyNeedsPython') }}\n            </strong>\n          </li>\n          <li>{{ $t('install.gpuSelection.customManualVenv') }}</li>\n          <li>{{ $t('install.gpuSelection.customInstallRequirements') }}</li>\n          <li>{{ $t('install.gpuSelection.customMayNotWork') }}</li>\n        </ul>\n      </div>\n\n      <div v-if=\"selected === 'cpu'\">\n        <p class=\"m-1\">\n          <Tag\n            icon=\"pi pi-exclamation-triangle\"\n            severity=\"warn\"\n            :value=\"t('icon.exclamation-triangle')\"\n          />\n          {{ $t('install.gpuSelection.cpuModeDescription') }}\n        </p>\n        <p class=\"m-1\">\n          {{ $t('install.gpuSelection.cpuModeDescription2') }}\n        </p>\n      </div>\n    </div>\n\n    <div\n      class=\"transition-opacity flex gap-3 h-0\"\n      :class=\"{\n        'opacity-40': selected && selected !== 'cpu'\n      }\"\n    >\n      <ToggleSwitch\n        v-model=\"cpuMode\"\n        input-id=\"cpu-mode\"\n        class=\"-translate-y-40\"\n      />\n      <label for=\"cpu-mode\" class=\"select-none\">\n        {{ $t('install.gpuSelection.enableCpuMode') }}\n      </label>\n    </div>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport type { TorchDeviceType } from '@comfyorg/comfyui-electron-types'\nimport Tag from 'primevue/tag'\nimport ToggleSwitch from 'primevue/toggleswitch'\nimport { computed } from 'vue'\nimport { useI18n } from 'vue-i18n'\n\nimport { electronAPI } from '@/utils/envUtil'\n\nconst { t } = useI18n()\n\nconst cpuMode = computed({\n  get: () => selected.value === 'cpu',\n  set: (value) => {\n    selected.value = value ? 'cpu' : null\n  }\n})\nconst selected = defineModel<TorchDeviceType | null>('device', {\n  required: true\n})\n\nconst electron = electronAPI()\nconst platform = electron.getPlatform()\n\nconst pickGpu = (value: typeof selected.value) => {\n  const newValue = selected.value === value ? null : value\n  selected.value = newValue\n}\n</script>\n\n<style scoped>\n.p-tag {\n  --p-tag-gap: 0.5rem;\n}\n\n.hover-brighten {\n  @apply transition-colors;\n  transition-property: filter, box-shadow;\n\n  &:hover {\n    filter: brightness(107%) contrast(105%);\n    box-shadow: 0 0 0.25rem #ffffff79;\n  }\n}\n.p-accordioncontent-content {\n  @apply bg-neutral-900 rounded-lg transition-colors;\n}\n\ndiv.selected {\n  .gpu-button:not(.selected) {\n    @apply opacity-50 hover:opacity-100;\n  }\n}\n\n.gpu-button {\n  @apply w-1/2 m-0 cursor-pointer rounded-lg flex flex-col items-center justify-around bg-neutral-800 bg-opacity-50 hover:bg-opacity-75 transition-colors;\n\n  &.selected {\n    @apply opacity-100 bg-neutral-700 bg-opacity-50 hover:bg-opacity-60;\n  }\n}\n\n.disabled {\n  @apply pointer-events-none opacity-40;\n}\n\n.p-card-header {\n  @apply text-center grow;\n}\n\n.p-card-body {\n  @apply text-center pt-0;\n}\n</style>\n","<template>\n  <div class=\"flex flex-col gap-6 w-[600px]\">\n    <!-- Installation Path Section -->\n    <div class=\"flex flex-col gap-4\">\n      <h2 class=\"text-2xl font-semibold text-neutral-100\">\n        {{ $t('install.chooseInstallationLocation') }}\n      </h2>\n\n      <p class=\"text-neutral-400 my-0\">\n        {{ $t('install.installLocationDescription') }}\n      </p>\n\n      <div class=\"flex gap-2\">\n        <IconField class=\"flex-1\">\n          <InputText\n            v-model=\"installPath\"\n            class=\"w-full\"\n            :class=\"{ 'p-invalid': pathError }\"\n            @update:model-value=\"validatePath\"\n            @focus=\"onFocus\"\n          />\n          <InputIcon\n            v-tooltip.top=\"$t('install.installLocationTooltip')\"\n            class=\"pi pi-info-circle\"\n          />\n        </IconField>\n        <Button icon=\"pi pi-folder\" class=\"w-12\" @click=\"browsePath\" />\n      </div>\n\n      <Message v-if=\"pathError\" severity=\"error\" class=\"whitespace-pre-line\">\n        {{ pathError }}\n      </Message>\n      <Message v-if=\"pathExists\" severity=\"warn\">\n        {{ $t('install.pathExists') }}\n      </Message>\n      <Message v-if=\"nonDefaultDrive\" severity=\"warn\">\n        {{ $t('install.nonDefaultDrive') }}\n      </Message>\n    </div>\n\n    <!-- System Paths Info -->\n    <div class=\"bg-neutral-800 p-4 rounded-lg\">\n      <h3 class=\"text-lg font-medium mt-0 mb-3 text-neutral-100\">\n        {{ $t('install.systemLocations') }}\n      </h3>\n      <div class=\"flex flex-col gap-2\">\n        <div class=\"flex items-center gap-2\">\n          <i class=\"pi pi-folder text-neutral-400\" />\n          <span class=\"text-neutral-400\">App Data:</span>\n          <span class=\"text-neutral-200\">{{ appData }}</span>\n          <span\n            v-tooltip=\"$t('install.appDataLocationTooltip')\"\n            class=\"pi pi-info-circle\"\n          />\n        </div>\n        <div class=\"flex items-center gap-2\">\n          <i class=\"pi pi-desktop text-neutral-400\" />\n          <span class=\"text-neutral-400\">App Path:</span>\n          <span class=\"text-neutral-200\">{{ appPath }}</span>\n          <span\n            v-tooltip=\"$t('install.appPathLocationTooltip')\"\n            class=\"pi pi-info-circle\"\n          />\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport Button from 'primevue/button'\nimport IconField from 'primevue/iconfield'\nimport InputIcon from 'primevue/inputicon'\nimport InputText from 'primevue/inputtext'\nimport Message from 'primevue/message'\nimport { onMounted, ref } from 'vue'\nimport { useI18n } from 'vue-i18n'\n\nimport { electronAPI } from '@/utils/envUtil'\n\nconst { t } = useI18n()\n\nconst installPath = defineModel<string>('installPath', { required: true })\nconst pathError = defineModel<string>('pathError', { required: true })\nconst pathExists = ref(false)\nconst nonDefaultDrive = ref(false)\nconst appData = ref('')\nconst appPath = ref('')\nconst inputTouched = ref(false)\n\nconst electron = electronAPI()\n\n// Get system paths on component mount\nonMounted(async () => {\n  const paths = await electron.getSystemPaths()\n  appData.value = paths.appData\n  appPath.value = paths.appPath\n  installPath.value = paths.defaultInstallPath\n\n  await validatePath(paths.defaultInstallPath)\n})\n\nconst validatePath = async (path: string | undefined) => {\n  try {\n    pathError.value = ''\n    pathExists.value = false\n    nonDefaultDrive.value = false\n    const validation = await electron.validateInstallPath(path ?? '')\n\n    // Create a pre-formatted list of errors\n    if (!validation.isValid) {\n      const errors: string[] = []\n      if (validation.cannotWrite) errors.push(t('install.cannotWrite'))\n      if (validation.freeSpace < validation.requiredSpace) {\n        const requiredGB = validation.requiredSpace / 1024 / 1024 / 1024\n        errors.push(`${t('install.insufficientFreeSpace')}: ${requiredGB} GB`)\n      }\n      if (validation.parentMissing) errors.push(t('install.parentMissing'))\n      if (validation.isOneDrive) errors.push(t('install.isOneDrive'))\n\n      if (validation.error)\n        errors.push(`${t('install.unhandledError')}: ${validation.error}`)\n      pathError.value = errors.join('\\n')\n    }\n\n    if (validation.isNonDefaultDrive) nonDefaultDrive.value = true\n    if (validation.exists) pathExists.value = true\n  } catch (error) {\n    pathError.value = t('install.pathValidationFailed')\n  }\n}\n\nconst browsePath = async () => {\n  try {\n    const result = await electron.showDirectoryPicker()\n    if (result) {\n      installPath.value = result\n      await validatePath(result)\n    }\n  } catch (error) {\n    pathError.value = t('install.failedToSelectDirectory')\n  }\n}\n\nconst onFocus = async () => {\n  if (!inputTouched.value) {\n    inputTouched.value = true\n    return\n  }\n  // Refresh validation on re-focus\n  await validatePath(installPath.value)\n}\n</script>\n","<template>\n  <div class=\"flex flex-col gap-6 w-[600px]\">\n    <!-- Source Location Section -->\n    <div class=\"flex flex-col gap-4\">\n      <h2 class=\"text-2xl font-semibold text-neutral-100\">\n        {{ $t('install.migrateFromExistingInstallation') }}\n      </h2>\n\n      <p class=\"text-neutral-400 my-0\">\n        {{ $t('install.migrationSourcePathDescription') }}\n      </p>\n\n      <div class=\"flex gap-2\">\n        <InputText\n          v-model=\"sourcePath\"\n          placeholder=\"Select existing ComfyUI installation (optional)\"\n          class=\"flex-1\"\n          :class=\"{ 'p-invalid': pathError }\"\n          @update:model-value=\"validateSource\"\n        />\n        <Button icon=\"pi pi-folder\" class=\"w-12\" @click=\"browsePath\" />\n      </div>\n\n      <Message v-if=\"pathError\" severity=\"error\">\n        {{ pathError }}\n      </Message>\n    </div>\n\n    <!-- Migration Options -->\n    <div\n      v-if=\"isValidSource\"\n      class=\"flex flex-col gap-4 bg-neutral-800 p-4 rounded-lg\"\n    >\n      <h3 class=\"text-lg mt-0 font-medium text-neutral-100\">\n        {{ $t('install.selectItemsToMigrate') }}\n      </h3>\n\n      <div class=\"flex flex-col gap-3\">\n        <div\n          v-for=\"item in migrationItems\"\n          :key=\"item.id\"\n          class=\"flex items-center gap-3 p-2 hover:bg-neutral-700 rounded\"\n          @click=\"item.selected = !item.selected\"\n        >\n          <Checkbox\n            v-model=\"item.selected\"\n            :input-id=\"item.id\"\n            :binary=\"true\"\n            @click.stop\n          />\n          <div>\n            <label :for=\"item.id\" class=\"text-neutral-200 font-medium\">\n              {{ item.label }}\n            </label>\n            <p class=\"text-sm text-neutral-400 my-1\">\n              {{ item.description }}\n            </p>\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <!-- Skip Migration -->\n    <div v-else class=\"text-neutral-400 italic\">\n      {{ $t('install.migrationOptional') }}\n    </div>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport { MigrationItems } from '@comfyorg/comfyui-electron-types'\nimport Button from 'primevue/button'\nimport Checkbox from 'primevue/checkbox'\nimport InputText from 'primevue/inputtext'\nimport Message from 'primevue/message'\nimport { computed, ref, watchEffect } from 'vue'\nimport { useI18n } from 'vue-i18n'\n\nimport { electronAPI } from '@/utils/envUtil'\n\nconst { t } = useI18n()\n\nconst electron = electronAPI()\n\nconst sourcePath = defineModel<string>('sourcePath', { required: false })\nconst migrationItemIds = defineModel<string[]>('migrationItemIds', {\n  required: false\n})\n\nconst migrationItems = ref(\n  MigrationItems.map((item) => ({\n    ...item,\n    selected: true\n  }))\n)\n\nconst pathError = ref('')\nconst isValidSource = computed(\n  () => sourcePath.value !== '' && pathError.value === ''\n)\n\nconst validateSource = async (sourcePath: string | undefined) => {\n  if (!sourcePath) {\n    pathError.value = ''\n    return\n  }\n\n  try {\n    pathError.value = ''\n    const validation = await electron.validateComfyUISource(sourcePath)\n\n    if (!validation.isValid) pathError.value = validation.error ?? 'ERROR'\n  } catch (error) {\n    console.error(error)\n    pathError.value = t('install.pathValidationFailed')\n  }\n}\n\nconst browsePath = async () => {\n  try {\n    const result = await electron.showDirectoryPicker()\n    if (result) {\n      sourcePath.value = result\n      await validateSource(result)\n    }\n  } catch (error) {\n    console.error(error)\n    pathError.value = t('install.failedToSelectDirectory')\n  }\n}\n\nwatchEffect(() => {\n  migrationItemIds.value = migrationItems.value\n    .filter((item) => item.selected)\n    .map((item) => item.id)\n})\n</script>\n","<template>\n  <div class=\"flex flex-col items-center gap-4\">\n    <div class=\"w-full\">\n      <h3 class=\"text-lg font-medium text-neutral-100\">\n        {{ $t(`settings.${normalizedSettingId}.name`) }}\n      </h3>\n      <p class=\"text-sm text-neutral-400 mt-1\">\n        {{ $t(`settings.${normalizedSettingId}.tooltip`) }}\n      </p>\n    </div>\n    <UrlInput\n      v-model=\"modelValue\"\n      :validate-url-fn=\"\n        (mirror: string) =>\n          checkMirrorReachable(mirror + (item.validationPathSuffix ?? ''))\n      \"\n      @state-change=\"validationState = $event\"\n    />\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport { computed, onMounted, ref, watch } from 'vue'\n\nimport UrlInput from '@/components/common/UrlInput.vue'\nimport { UVMirror } from '@/constants/uvMirrors'\nimport { normalizeI18nKey } from '@/utils/formatUtil'\nimport { checkMirrorReachable } from '@/utils/networkUtil'\nimport { ValidationState } from '@/utils/validationUtil'\n\nconst { item } = defineProps<{\n  item: UVMirror\n}>()\n\nconst emit = defineEmits<{\n  'state-change': [state: ValidationState]\n}>()\n\nconst modelValue = defineModel<string>('modelValue', { required: true })\nconst validationState = ref<ValidationState>(ValidationState.IDLE)\n\nconst normalizedSettingId = computed(() => {\n  return normalizeI18nKey(item.settingId)\n})\n\nonMounted(() => {\n  modelValue.value = item.mirror\n})\n\nwatch(validationState, (newState) => {\n  emit('state-change', newState)\n\n  // Set fallback mirror if default mirror is invalid\n  if (\n    newState === ValidationState.INVALID &&\n    modelValue.value === item.mirror\n  ) {\n    modelValue.value = item.fallbackMirror\n  }\n})\n</script>\n","<template>\n  <Panel\n    :header=\"$t('install.settings.mirrorSettings')\"\n    toggleable\n    :collapsed=\"!showMirrorInputs\"\n    pt:root=\"bg-neutral-800 border-none w-[600px]\"\n  >\n    <template\n      v-for=\"([item, modelValue], index) in mirrors\"\n      :key=\"item.settingId + item.mirror\"\n    >\n      <Divider v-if=\"index > 0\" />\n\n      <MirrorItem\n        v-model=\"modelValue.value\"\n        :item=\"item\"\n        @state-change=\"validationStates[index] = $event\"\n      />\n    </template>\n    <template #icons>\n      <i\n        v-tooltip=\"validationStateTooltip\"\n        :class=\"{\n          'pi pi-spin pi-spinner text-neutral-400':\n            validationState === ValidationState.LOADING,\n          'pi pi-check text-green-500':\n            validationState === ValidationState.VALID,\n          'pi pi-times text-red-500':\n            validationState === ValidationState.INVALID\n        }\"\n      />\n    </template>\n  </Panel>\n</template>\n\n<script setup lang=\"ts\">\nimport {\n  TorchDeviceType,\n  TorchMirrorUrl\n} from '@comfyorg/comfyui-electron-types'\nimport Divider from 'primevue/divider'\nimport Panel from 'primevue/panel'\nimport { ModelRef, computed, onMounted, ref } from 'vue'\n\nimport MirrorItem from '@/components/install/mirror/MirrorItem.vue'\nimport { PYPI_MIRROR, PYTHON_MIRROR, UVMirror } from '@/constants/uvMirrors'\nimport { t } from '@/i18n'\nimport { isInChina } from '@/utils/networkUtil'\nimport { ValidationState, mergeValidationStates } from '@/utils/validationUtil'\n\nconst showMirrorInputs = ref(false)\nconst { device } = defineProps<{ device: TorchDeviceType | null }>()\nconst pythonMirror = defineModel<string>('pythonMirror', { required: true })\nconst pypiMirror = defineModel<string>('pypiMirror', { required: true })\nconst torchMirror = defineModel<string>('torchMirror', { required: true })\n\nconst getTorchMirrorItem = (device: TorchDeviceType): UVMirror => {\n  const settingId = 'Comfy-Desktop.UV.TorchInstallMirror'\n  switch (device) {\n    case 'mps':\n      return {\n        settingId,\n        mirror: TorchMirrorUrl.NightlyCpu,\n        fallbackMirror: TorchMirrorUrl.NightlyCpu\n      }\n    case 'nvidia':\n      return {\n        settingId,\n        mirror: TorchMirrorUrl.Cuda,\n        fallbackMirror: TorchMirrorUrl.Cuda\n      }\n    case 'cpu':\n    default:\n      return {\n        settingId,\n        mirror: PYPI_MIRROR.mirror,\n        fallbackMirror: PYPI_MIRROR.fallbackMirror\n      }\n  }\n}\n\nconst userIsInChina = ref(false)\nonMounted(async () => {\n  userIsInChina.value = await isInChina()\n})\n\nconst useFallbackMirror = (mirror: UVMirror) => ({\n  ...mirror,\n  mirror: mirror.fallbackMirror\n})\n\nconst mirrors = computed<[UVMirror, ModelRef<string>][]>(() =>\n  (\n    [\n      [PYTHON_MIRROR, pythonMirror],\n      [PYPI_MIRROR, pypiMirror],\n      [getTorchMirrorItem(device ?? 'cpu'), torchMirror]\n    ] as [UVMirror, ModelRef<string>][]\n  ).map(([item, modelValue]) => [\n    userIsInChina.value ? useFallbackMirror(item) : item,\n    modelValue\n  ])\n)\n\nconst validationStates = ref<ValidationState[]>(\n  mirrors.value.map(() => ValidationState.IDLE)\n)\nconst validationState = computed(() => {\n  return mergeValidationStates(validationStates.value)\n})\nconst validationStateTooltip = computed(() => {\n  switch (validationState.value) {\n    case ValidationState.INVALID:\n      return t('install.settings.mirrorsUnreachable')\n    case ValidationState.VALID:\n      return t('install.settings.mirrorsReachable')\n    default:\n      return t('install.settings.checkingMirrors')\n  }\n})\n</script>\n","<template>\n  <BaseViewTemplate dark>\n    <!-- h-full to make sure the stepper does not layout shift between steps\n    as for each step the stepper height is different. Inherit the center element\n    placement from BaseViewTemplate would cause layout shift. -->\n    <Stepper\n      class=\"h-full p-8 2xl:p-16\"\n      value=\"0\"\n      @update:value=\"handleStepChange\"\n    >\n      <StepList class=\"select-none\">\n        <Step value=\"0\">\n          {{ $t('install.gpu') }}\n        </Step>\n        <Step value=\"1\" :disabled=\"noGpu\">\n          {{ $t('install.installLocation') }}\n        </Step>\n        <Step value=\"2\" :disabled=\"noGpu || hasError || highestStep < 1\">\n          {{ $t('install.migration') }}\n        </Step>\n        <Step value=\"3\" :disabled=\"noGpu || hasError || highestStep < 2\">\n          {{ $t('install.desktopSettings') }}\n        </Step>\n      </StepList>\n      <StepPanels>\n        <StepPanel v-slot=\"{ activateCallback }\" value=\"0\">\n          <GpuPicker v-model:device=\"device\" />\n          <div class=\"flex pt-6 justify-end\">\n            <Button\n              :label=\"$t('g.next')\"\n              icon=\"pi pi-arrow-right\"\n              icon-pos=\"right\"\n              :disabled=\"typeof device !== 'string'\"\n              @click=\"activateCallback('1')\"\n            />\n          </div>\n        </StepPanel>\n        <StepPanel v-slot=\"{ activateCallback }\" value=\"1\">\n          <InstallLocationPicker\n            v-model:installPath=\"installPath\"\n            v-model:pathError=\"pathError\"\n          />\n          <div class=\"flex pt-6 justify-between\">\n            <Button\n              :label=\"$t('g.back')\"\n              severity=\"secondary\"\n              icon=\"pi pi-arrow-left\"\n              @click=\"activateCallback('0')\"\n            />\n            <Button\n              :label=\"$t('g.next')\"\n              icon=\"pi pi-arrow-right\"\n              icon-pos=\"right\"\n              :disabled=\"pathError !== ''\"\n              @click=\"activateCallback('2')\"\n            />\n          </div>\n        </StepPanel>\n        <StepPanel v-slot=\"{ activateCallback }\" value=\"2\">\n          <MigrationPicker\n            v-model:sourcePath=\"migrationSourcePath\"\n            v-model:migrationItemIds=\"migrationItemIds\"\n          />\n          <div class=\"flex pt-6 justify-between\">\n            <Button\n              :label=\"$t('g.back')\"\n              severity=\"secondary\"\n              icon=\"pi pi-arrow-left\"\n              @click=\"activateCallback('1')\"\n            />\n            <Button\n              :label=\"$t('g.next')\"\n              icon=\"pi pi-arrow-right\"\n              icon-pos=\"right\"\n              @click=\"activateCallback('3')\"\n            />\n          </div>\n        </StepPanel>\n        <StepPanel v-slot=\"{ activateCallback }\" value=\"3\">\n          <DesktopSettingsConfiguration\n            v-model:autoUpdate=\"autoUpdate\"\n            v-model:allowMetrics=\"allowMetrics\"\n          />\n          <MirrorsConfiguration\n            v-model:pythonMirror=\"pythonMirror\"\n            v-model:pypiMirror=\"pypiMirror\"\n            v-model:torchMirror=\"torchMirror\"\n            :device=\"device\"\n            class=\"mt-6\"\n          />\n          <div class=\"flex mt-6 justify-between\">\n            <Button\n              :label=\"$t('g.back')\"\n              severity=\"secondary\"\n              icon=\"pi pi-arrow-left\"\n              @click=\"activateCallback('2')\"\n            />\n            <Button\n              :label=\"$t('g.install')\"\n              icon=\"pi pi-check\"\n              icon-pos=\"right\"\n              :disabled=\"hasError\"\n              @click=\"install()\"\n            />\n          </div>\n        </StepPanel>\n      </StepPanels>\n    </Stepper>\n  </BaseViewTemplate>\n</template>\n\n<script setup lang=\"ts\">\nimport type {\n  InstallOptions,\n  TorchDeviceType\n} from '@comfyorg/comfyui-electron-types'\nimport Button from 'primevue/button'\nimport Step from 'primevue/step'\nimport StepList from 'primevue/steplist'\nimport StepPanel from 'primevue/steppanel'\nimport StepPanels from 'primevue/steppanels'\nimport Stepper from 'primevue/stepper'\nimport { computed, onMounted, ref, toRaw } from 'vue'\nimport { useRouter } from 'vue-router'\n\nimport DesktopSettingsConfiguration from '@/components/install/DesktopSettingsConfiguration.vue'\nimport GpuPicker from '@/components/install/GpuPicker.vue'\nimport InstallLocationPicker from '@/components/install/InstallLocationPicker.vue'\nimport MigrationPicker from '@/components/install/MigrationPicker.vue'\nimport MirrorsConfiguration from '@/components/install/MirrorsConfiguration.vue'\nimport { electronAPI } from '@/utils/envUtil'\nimport BaseViewTemplate from '@/views/templates/BaseViewTemplate.vue'\n\nconst device = ref<TorchDeviceType | null>(null)\n\nconst installPath = ref('')\nconst pathError = ref('')\n\nconst migrationSourcePath = ref('')\nconst migrationItemIds = ref<string[]>([])\n\nconst autoUpdate = ref(true)\nconst allowMetrics = ref(true)\nconst pythonMirror = ref('')\nconst pypiMirror = ref('')\nconst torchMirror = ref('')\n\n/** Forces each install step to be visited at least once. */\nconst highestStep = ref(0)\n\nconst handleStepChange = (value: string | number) => {\n  setHighestStep(value)\n\n  electronAPI().Events.trackEvent('install_stepper_change', {\n    step: value\n  })\n}\n\nconst setHighestStep = (value: string | number) => {\n  const int = typeof value === 'number' ? value : parseInt(value, 10)\n  if (!isNaN(int) && int > highestStep.value) highestStep.value = int\n}\n\nconst hasError = computed(() => pathError.value !== '')\nconst noGpu = computed(() => typeof device.value !== 'string')\n\nconst electron = electronAPI()\nconst router = useRouter()\nconst install = async () => {\n  const options: InstallOptions = {\n    installPath: installPath.value,\n    autoUpdate: autoUpdate.value,\n    allowMetrics: allowMetrics.value,\n    migrationSourcePath: migrationSourcePath.value,\n    migrationItemIds: toRaw(migrationItemIds.value),\n    pythonMirror: pythonMirror.value,\n    pypiMirror: pypiMirror.value,\n    torchMirror: torchMirror.value,\n    // @ts-expect-error fixme ts strict error\n    device: device.value\n  }\n  electron.installComfyUI(options)\n\n  const nextPage =\n    options.device === 'unsupported' ? '/manual-configuration' : '/server-start'\n  await router.push(nextPage)\n}\n\nonMounted(async () => {\n  if (!electron) return\n\n  const detectedGpu = await electron.Config.getDetectedGpu()\n  if (detectedGpu === 'mps' || detectedGpu === 'nvidia') {\n    device.value = detectedGpu\n  }\n\n  electronAPI().Events.trackEvent('install_stepper_change', {\n    step: '0',\n    gpu: detectedGpu\n  })\n})\n</script>\n\n<style scoped>\n:deep(.p-steppanel) {\n  @apply bg-transparent;\n}\n</style>\n"],"names":["_useModel","_openBlock","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","_hoisted_3","_toDisplayString","$t","_hoisted_4","_hoisted_5","_hoisted_6","_hoisted_7","_hoisted_8","_hoisted_9","_createVNode","_unref","ToggleSwitch","Divider","_hoisted_10","_hoisted_11","_hoisted_12","_hoisted_13","Dialog","_hoisted_14","t","_normalizeClass","Tag","_createTextVNode","IconField","InputText","InputIcon","Button","_createBlock","Message","_withDirectives","sourcePath","_Fragment","_renderList","Checkbox","UrlInput","item","Panel","MirrorItem","BaseViewTemplate","Stepper","StepList","Step","StepPanels","StepPanel","_withCtx","InstallLocationPicker","MigrationPicker","DesktopSettingsConfiguration","MirrorsConfiguration"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmIM,UAAA,aAAa,IAAI,KAAK;AACtB,UAAA,aAAaA,kBAAqB,YAAgC;AAClE,UAAA,eAAeA,SAAoB,SAAC,cAAkC;AAE5E,UAAM,kBAAkB,6BAAM;AAC5B,iBAAW,QAAQ;AAAA,IACrB,GAFwB;;AAtItB,aAAAC,UAAA,GAAAC,mBAyHM,OAzHNC,cAyHM;AAAA,QAxHJC,gBAQM,OARNC,cAQM;AAAA,UAPJD,gBAEK,MAFLE,cAEKC,gBADAC,KAAE,GAAA,4BAAA,CAAA,GAAA,CAAA;AAAA,UAGPJ,gBAEI,KAFJK,cAEIF,gBADCC,KAAE,GAAA,uCAAA,CAAA,GAAA,CAAA;AAAA,QAAA;QAITJ,gBAmCM,OAnCNM,cAmCM;AAAA,UAjCJN,gBAUM,OAVNO,cAUM;AAAA,YATJP,gBAOM,OAPNQ,cAOM;AAAA,cANJR,gBAEK,MAFLS,cAEKN,gBADAC,KAAE,GAAA,6BAAA,CAAA,GAAA,CAAA;AAAA,cAEPJ,gBAEI,KAFJU,cAEIP,gBADCC,KAAE,GAAA,wCAAA,CAAA,GAAA,CAAA;AAAA,YAAA;YAGTO,YAAqCC,MAAAC,MAAA,GAAA;AAAA,0BAAd,WAAU;AAAA,2EAAV,WAAU,QAAA;AAAA,YAAA;;UAGnCF,YAAWC,MAAAE,QAAA,CAAA;AAAA,UAGXd,gBAiBM,OAjBNe,eAiBM;AAAA,YAhBJf,gBAcM,OAdNgB,eAcM;AAAA,cAbJhB,gBAEK,MAFLiB,eAEKd,gBADAC,KAAE,GAAA,+BAAA,CAAA,GAAA,CAAA;AAAA,cAEPJ,gBAEI,KAFJkB,eAEIf,gBADCC,KAAE,GAAA,0CAAA,CAAA,GAAA,CAAA;AAAA,cAEPJ,gBAMI,KAAA;AAAA,gBALF,MAAK;AAAA,gBACL,OAAM;AAAA,gBACL,uBAAe,iBAAe,CAAA,SAAA,CAAA;AAAA,iCAE5BI,KAAE,GAAA,qCAAA,CAAA,GAAA,CAAA;AAAA,YAAA;YAGTO,YAAuCC,MAAAC,MAAA,GAAA;AAAA,0BAAhB,aAAY;AAAA,2EAAZ,aAAY,QAAA;AAAA,YAAA;;;QAKvCF,YAuESC,MAAAO,QAAA,GAAA;AAAA,UAtEC,SAAS,WAAU;AAAA,oEAAV,WAAU,QAAA;AAAA,UAC3B,OAAA;AAAA,UACC,QAAQf,KAAE,GAAA,6CAAA;AAAA,QAAA;2BAEX,MAiEM;AAAA,YAjENJ,gBAiEM,OAjENoB,eAiEM;AAAA,cAhEJpB,gBAEK,MAFL,aAEKG,gBADAC,KAAE,GAAA,qDAAA,CAAA,GAAA,CAAA;AAAA,cAEPJ,gBAgBK,MAhBL,aAgBK;AAAA,gBAfHA,gBAIK,4BAFDI,KAAE,GAAA,4DAAA,CAAA,GAAA,CAAA;AAAA,gBAGNJ,gBAEK,4BADAI,KAAE,GAAA,0DAAA,CAAA,GAAA,CAAA;AAAA,gBAEPJ,gBAMK,4BAJDI,KAAE;AAAA;;;cAORJ,gBAEK,MAFL,aAEKG,gBADAC,KAAE,GAAA,0DAAA,CAAA,GAAA,CAAA;AAAA,cAEPJ,gBA6BK,MA7BL,aA6BK;AAAA,gBA5BHA,gBAMK,4BAJDI,KAAE;AAAA;;gBAKNJ,gBAMK,4BAJDI,KAAE;AAAA;;gBAKNJ,gBAMK,4BAJDI,KAAE;AAAA;;gBAKNJ,gBAMK,4BAJDI,KAAE;AAAA;;;cAORJ,gBAQM,OARN,aAQM;AAAA,gBAPJA,gBAMI,KANJ,aAMIG,gBADCC,KAAE,GAAA,sDAAA,CAAA,GAAA,CAAA;AAAA;;;;;;;;;ACrHjB,MAAe,aAAA,KAAA,IAAA,IAAA,0BAAA,YAAA,GAAA,EAAA;ACAf,MAAe,aAAA,KAAA,IAAA,IAAA,6BAAA,YAAA,GAAA,EAAA;ACAf,MAAe,aAAA,KAAA,IAAA,IAAA,mCAAA,YAAA,GAAA,EAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC4IT,UAAA,EAAE,GAAAiB,GAAE,IAAI,QAAQ;AAEtB,UAAM,UAAU,SAAS;AAAA,MACvB,KAAK,6BAAM,SAAS,UAAU,OAAzB;AAAA,MACL,KAAK,wBAAC,UAAU;AACL,iBAAA,QAAQ,QAAQ,QAAQ;AAAA,MAAA,GAD9B;AAAA,IAEL,CACD;AACK,UAAA,WAAWzB,SAAmC,SAAC,QAEpD;AAED,UAAM,WAAW,YAAY;AACvB,UAAA,WAAW,SAAS,YAAY;AAEhC,UAAA,UAAU,wBAAC,UAAiC;AAChD,YAAM,WAAW,SAAS,UAAU,QAAQ,OAAO;AACnD,eAAS,QAAQ;AAAA,IACnB,GAHgB;;AA1Jd,aAAAC,UAAA,GAAAC,mBA+HM,OA/HNC,cA+HM;AAAA,QA7HJC,gBA4GM,OA5GNC,cA4GM;AAAA,UA3GJD,gBAEK,MAFLE,cAEKC,gBADAC,KAAE,GAAA,gCAAA,CAAA,GAAA,CAAA;AAAA,UAGPJ,gBAEI,KAFJK,cACKD,gBAAAA,KAAAA,mDAAkD,MACvD,CAAA;AAAA,UAGAJ,gBAkDM,OAAA;AAAA,YAjDJ,OAAKsB,eAAA,CAAC,6CAA2C,EAAA,UAC7B,SAAQ,OAAA,CAAA;AAAA,UAAA;YAIpBV,MAAQ,QAAA,MAAA,yBADhBd,mBAcM,OAAA;AAAA;cAZJ,OAAKwB,eAAA,CAAC,cAAY,EAAA,UACE,SAAQ,UAAA,SAAA,CAAA,CAAA;AAAA,cAC5B,MAAK;AAAA,cACJ,+CAAO,QAAO,QAAA;AAAA;cAEftB,gBAME,OAAA;AAAA,gBALA,OAAM;AAAA,gBACN,KAAI;AAAA,gBACJ,OAAM;AAAA,gBACN,QAAO;AAAA,gBACP,KAAA;AAAA,cAAA;;YAKIY,MAAQ,QAAA,MAAA,yBADhBd,mBAcM,OAAA;AAAA;cAZJ,OAAKwB,eAAA,CAAC,cAAY,EAAA,UACE,SAAQ,UAAA,MAAA,CAAA,CAAA;AAAA,cAC5B,MAAK;AAAA,cACJ,+CAAO,QAAO,KAAA;AAAA;cAEftB,gBAME,OAAA;AAAA,gBALA,OAAM;AAAA,gBACN,KAAI;AAAA,gBACJ,OAAM;AAAA,gBACN,OAAA;AAAA,gBACA,KAAA;AAAA,cAAA;;YAIJA,gBAYM,OAAA;AAAA,cAXJ,OAAKsB,eAAA,CAAC,cAAY,EAAA,UACE,SAAQ,UAAA,cAAA,CAAA,CAAA;AAAA,cAC5B,MAAK;AAAA,cACJ,+CAAO,QAAO,aAAA;AAAA;cAEftB,gBAKE,OAAA;AAAA,gBAJA,OAAM;AAAA,gBACN,KAAI;AAAA,gBACJ,OAAM;AAAA,gBACN,KAAA;AAAA,cAAA;;;UAMG,SAAQ,UAAA,YAAjBH,UAAA,GAAAC,mBAGI,KAHJQ,cAGI;AAAA,YAFFK,YAA6DC,MAAAW,QAAA,GAAA;AAAA,cAAxD,MAAK;AAAA,cAAc,UAAS;AAAA,cAAW,OAAO;AAAA,YAAA;YAAUC,gBAAA,sBAC1DpB,KAAE,GAAA,wCAAA,CAAA,GAAA,CAAA;AAAA,UAAA;UAGE,SAAQ,UAAA,SAAjBP,UAAA,GAAAC,mBAGI,KAHJS,cAGI;AAAA,YAFFI,YAA4DC,MAAAW,QAAA,GAAA;AAAA,cAAvD,MAAK;AAAA,cAAc,UAAS;AAAA,cAAW,OAAO;AAAA,YAAA;YAASC,gBAAA,sBACzDpB,KAAE,GAAA,qCAAA,CAAA,GAAA,CAAA;AAAA,UAAA;UAGI,SAAQ,UAAA,iBAAnBP,UAAA,GAAAC,mBAoBM,OApBNU,cAoBM;AAAA,YAnBJR,gBAOI,KAPJS,cAOI;AAAA,cANFE,YAIEC,MAAAW,QAAA,GAAA;AAAA,gBAHA,MAAK;AAAA,gBACL,UAAS;AAAA,gBACR,OAAOX,MAACS,EAAA,EAAA,2BAAA;AAAA;cACTG,gBAAA,sBACCpB,KAAE,GAAA,wCAAA,CAAA,GAAA,CAAA;AAAA,YAAA;YAGPJ,gBASK,MAAA,MAAA;AAAA,cARHA,gBAIK,MAAA,MAAA;AAAA,gBAHHA,gBAES,gCADJI,KAAE,GAAA,6CAAA,CAAA,GAAA,CAAA;AAAA,cAAA;cAGTJ,gBAA0D,4BAAnDI,KAAE,GAAA,uCAAA,CAAA,GAAA,CAAA;AAAA,cACTJ,gBAAmE,4BAA5DI,KAAE,GAAA,gDAAA,CAAA,GAAA,CAAA;AAAA,cACTJ,gBAA0D,4BAAnDI,KAAE,GAAA,uCAAA,CAAA,GAAA,CAAA;AAAA;;UAIF,SAAQ,UAAA,mBAAnB,GAAAN,mBAYM,OAAAY,cAAA;AAAA,YAXJV,gBAOI,KAPJe,eAOI;AAAA,cANFJ,YAIEC,MAAAW,QAAA,GAAA;AAAA,gBAHA,MAAK;AAAA,gBACL,UAAS;AAAA,gBACR,OAAOX,MAACS,EAAA,EAAA,2BAAA;AAAA;cACTG,gBAAA,sBACCpB,KAAE,GAAA,yCAAA,CAAA,GAAA,CAAA;AAAA,YAAA;YAEPJ,gBAEI,KAFJgB,eAEIb,gBADCC,KAAE,GAAA,0CAAA,CAAA,GAAA,CAAA;AAAA,UAAA;;QAKXJ,gBAcM,OAAA;AAAA,UAbJ,uBAAM,qCAAmC;AAAA,YACT,cAAA,SAAA,SAAY,SAAQ,UAAA;AAAA,UAAA;;UAIpDW,YAIEC,MAAAC,MAAA,GAAA;AAAA,wBAHS,QAAO;AAAA,yEAAP,QAAO,QAAA;AAAA,YAChB,YAAS;AAAA,YACT,OAAM;AAAA;UAERb,gBAEQ,SAFRiB,eAEQd,gBADHC,KAAE,GAAA,oCAAA,CAAA,GAAA,CAAA;AAAA,QAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC7CP,UAAA,EAAE,GAAAiB,GAAE,IAAI,QAAQ;AAEhB,UAAA,cAAczB,kBAAoB,aAAiC;AACnE,UAAA,YAAYA,SAAoB,SAAA,WAA+B;AAC/D,UAAA,aAAa,IAAI,KAAK;AACtB,UAAA,kBAAkB,IAAI,KAAK;AAC3B,UAAA,UAAU,IAAI,EAAE;AAChB,UAAA,UAAU,IAAI,EAAE;AAChB,UAAA,eAAe,IAAI,KAAK;AAE9B,UAAM,WAAW,YAAY;AAG7B,cAAU,YAAY;AACd,YAAA,QAAQ,MAAM,SAAS,eAAe;AAC5C,cAAQ,QAAQ,MAAM;AACtB,cAAQ,QAAQ,MAAM;AACtB,kBAAY,QAAQ,MAAM;AAEpB,YAAA,aAAa,MAAM,kBAAkB;AAAA,IAAA,CAC5C;AAEK,UAAA,eAAe,8BAAO,SAA6B;AACnD,UAAA;AACF,kBAAU,QAAQ;AAClB,mBAAW,QAAQ;AACnB,wBAAgB,QAAQ;AACxB,cAAM,aAAa,MAAM,SAAS,oBAAoB,QAAQ,EAAE;AAG5D,YAAA,CAAC,WAAW,SAAS;AACvB,gBAAM,SAAmB,CAAC;AAC1B,cAAI,WAAW,YAAa,QAAO,KAAKyB,GAAE,qBAAqB,CAAC;AAC5D,cAAA,WAAW,YAAY,WAAW,eAAe;AACnD,kBAAM,aAAa,WAAW,gBAAgB,OAAO,OAAO;AAC5D,mBAAO,KAAK,GAAGA,GAAE,+BAA+B,CAAC,KAAK,UAAU,KAAK;AAAA,UAAA;AAEvE,cAAI,WAAW,cAAe,QAAO,KAAKA,GAAE,uBAAuB,CAAC;AACpE,cAAI,WAAW,WAAY,QAAO,KAAKA,GAAE,oBAAoB,CAAC;AAE9D,cAAI,WAAW;AACN,mBAAA,KAAK,GAAGA,GAAE,wBAAwB,CAAC,KAAK,WAAW,KAAK,EAAE;AACzD,oBAAA,QAAQ,OAAO,KAAK,IAAI;AAAA,QAAA;AAGhC,YAAA,WAAW,kBAAmB,iBAAgB,QAAQ;AACtD,YAAA,WAAW,OAAQ,YAAW,QAAQ;AAAA,eACnC,OAAO;AACJ,kBAAA,QAAQA,GAAE,8BAA8B;AAAA,MAAA;AAAA,IAEtD,GA5BqB;AA8BrB,UAAM,aAAa,mCAAY;AACzB,UAAA;AACI,cAAA,SAAS,MAAM,SAAS,oBAAoB;AAClD,YAAI,QAAQ;AACV,sBAAY,QAAQ;AACpB,gBAAM,aAAa,MAAM;AAAA,QAAA;AAAA,eAEpB,OAAO;AACJ,kBAAA,QAAQA,GAAE,iCAAiC;AAAA,MAAA;AAAA,IAEzD,GAVmB;AAYnB,UAAM,UAAU,mCAAY;AACtB,UAAA,CAAC,aAAa,OAAO;AACvB,qBAAa,QAAQ;AACrB;AAAA,MAAA;AAGI,YAAA,aAAa,YAAY,KAAK;AAAA,IACtC,GAPgB;;;AA/Id,aAAAxB,UAAA,GAAAC,mBAiEM,OAjENC,cAiEM;AAAA,QA/DJC,gBAmCM,OAnCNC,cAmCM;AAAA,UAlCJD,gBAEK,MAFLE,cAEKC,gBADAC,KAAE,GAAA,oCAAA,CAAA,GAAA,CAAA;AAAA,UAGPJ,gBAEI,KAFJK,cAEIF,gBADCC,KAAE,GAAA,oCAAA,CAAA,GAAA,CAAA;AAAA,UAGPJ,gBAeM,OAfNM,cAeM;AAAA,YAdJK,YAYYC,MAAAa,QAAA,GAAA,EAZD,OAAM,YAAQ;AAAA,+BACvB,MAME;AAAA,gBANFd,YAMEC,MAAAc,QAAA,GAAA;AAAA,8BALS,YAAW;AAAA;0DAAX,YAAW,QAAA;AAAA,oBAGC;AAAA;kBAFrB,OAAKJ,eAAA,CAAC,UAAQ,EAAA,aACS,UAAS,MAAA,CAAA,CAAA;AAAA,kBAE/B;AAAA;+BAEHX,YAGEC,MAAAe,QAAA,GAAA,EADA,OAAM,oBAAmB,GAAA,MAAA,GAAA,GAAA;AAAA;;oBADVvB,KAAE,GAAA,gCAAA;AAAA;oBAAP,EAAA,KAAV,KAAoD;AAAA,kBAAA;AAAA;;;;YAIxDO,YAA+DC,MAAAgB,QAAA,GAAA;AAAA,cAAvD,MAAK;AAAA,cAAe,OAAM;AAAA,cAAQ,SAAO;AAAA;;UAGpC,UAAS,sBAAxBC,YAEUjB,MAAAkB,QAAA,GAAA;AAAA;YAFgB,UAAS;AAAA,YAAQ,OAAM;AAAA,UAAA;6BAC/C,MAAe;AAAA,8CAAZ,UAAS,KAAA,GAAA,CAAA;AAAA,YAAA;;;UAEC,WAAU,sBAAzBD,YAEUjB,MAAAkB,QAAA,GAAA;AAAA;YAFiB,UAAS;AAAA,UAAA;6BAClC,MAA8B;AAAA,8CAA3B1B,KAAE,GAAA,oBAAA,CAAA,GAAA,CAAA;AAAA,YAAA;;;UAEQ,gBAAe,sBAA9ByB,YAEUjB,MAAAkB,QAAA,GAAA;AAAA;YAFsB,UAAS;AAAA,UAAA;6BACvC,MAAmC;AAAA,8CAAhC1B,KAAE,GAAA,yBAAA,CAAA,GAAA,CAAA;AAAA,YAAA;;;;QAKTJ,gBAwBM,OAxBNO,cAwBM;AAAA,UAvBJP,gBAEK,MAFLQ,cAEKL,gBADAC,KAAE,GAAA,yBAAA,CAAA,GAAA,CAAA;AAAA,UAEPJ,gBAmBM,OAnBNS,cAmBM;AAAA,YAlBJT,gBAQM,OARNU,cAQM;AAAA,wCAPJV,gBAA2C,KAAA,EAAxC,OAAM,gCAA+B,GAAA,MAAA,EAAA;AAAA,cACxC,OAAA,CAAA,MAAA,OAAA,CAAA,IAAAA,gBAA+C,QAAzC,EAAA,OAAM,sBAAmB,aAAS,EAAA;AAAA,cACxCA,gBAAmD,QAAnDe,eAAmDZ,gBAAjB,QAAO,KAAA,GAAA,CAAA;AAAA,cACzC4B,eAAA/B,gBAGE,QAHFgB,eAGE,MAAA,GAAA,GAAA;AAAA,qCAFWZ,KAAE,GAAA,gCAAA,CAAA;AAAA;;YAIjBJ,gBAQM,OARNiB,eAQM;AAAA,wCAPJjB,gBAA4C,KAAA,EAAzC,OAAM,iCAAgC,GAAA,MAAA,EAAA;AAAA,cACzC,OAAA,CAAA,MAAA,OAAA,CAAA,IAAAA,gBAA+C,QAAzC,EAAA,OAAM,sBAAmB,aAAS,EAAA;AAAA,cACxCA,gBAAmD,QAAnD,aAAmDG,gBAAjB,QAAO,KAAA,GAAA,CAAA;AAAA,cACzC4B,eAAA/B,gBAGE,QAHF,aAGE,MAAA,GAAA,GAAA;AAAA,qCAFWI,KAAE,GAAA,gCAAA,CAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACoBnB,UAAA,EAAE,GAAAiB,GAAE,IAAI,QAAQ;AAEtB,UAAM,WAAW,YAAY;AAEvB,UAAA,aAAazB,kBAAoB,YAAiC;AAClE,UAAA,mBAAmBA,SAAqB,SAAC,kBAE9C;AAED,UAAM,iBAAiB;AAAA,MACrB,eAAe,IAAI,CAAC,UAAU;AAAA,QAC5B,GAAG;AAAA,QACH,UAAU;AAAA,MAAA,EACV;AAAA,IACJ;AAEM,UAAA,YAAY,IAAI,EAAE;AACxB,UAAM,gBAAgB;AAAA,MACpB,MAAM,WAAW,UAAU,MAAM,UAAU,UAAU;AAAA,IACvD;AAEM,UAAA,iBAAiB,8BAAOoC,gBAAmC;AAC/D,UAAI,CAACA,aAAY;AACf,kBAAU,QAAQ;AAClB;AAAA,MAAA;AAGE,UAAA;AACF,kBAAU,QAAQ;AAClB,cAAM,aAAa,MAAM,SAAS,sBAAsBA,WAAU;AAElE,YAAI,CAAC,WAAW,QAAmB,WAAA,QAAQ,WAAW,SAAS;AAAA,eACxD,OAAO;AACd,gBAAQ,MAAM,KAAK;AACT,kBAAA,QAAQX,GAAE,8BAA8B;AAAA,MAAA;AAAA,IAEtD,GAfuB;AAiBvB,UAAM,aAAa,mCAAY;AACzB,UAAA;AACI,cAAA,SAAS,MAAM,SAAS,oBAAoB;AAClD,YAAI,QAAQ;AACV,qBAAW,QAAQ;AACnB,gBAAM,eAAe,MAAM;AAAA,QAAA;AAAA,eAEtB,OAAO;AACd,gBAAQ,MAAM,KAAK;AACT,kBAAA,QAAQA,GAAE,iCAAiC;AAAA,MAAA;AAAA,IAEzD,GAXmB;AAanB,gBAAY,MAAM;AAChB,uBAAiB,QAAQ,eAAe,MACrC,OAAO,CAAC,SAAS,KAAK,QAAQ,EAC9B,IAAI,CAAC,SAAS,KAAK,EAAE;AAAA,IAAA,CACzB;;AAtIC,aAAAxB,UAAA,GAAAC,mBAiEM,OAjENC,cAiEM;AAAA,QA/DJC,gBAuBM,OAvBNC,cAuBM;AAAA,UAtBJD,gBAEK,MAFLE,cAEKC,gBADAC,KAAE,GAAA,yCAAA,CAAA,GAAA,CAAA;AAAA,UAGPJ,gBAEI,KAFJK,cAEIF,gBADCC,KAAE,GAAA,wCAAA,CAAA,GAAA,CAAA;AAAA,UAGPJ,gBASM,OATN,YASM;AAAA,YARJW,YAMEC,MAAAc,QAAA,GAAA;AAAA,0BALS,WAAU;AAAA;sDAAV,WAAU,QAAA;AAAA,gBAIE;AAAA;cAHrB,aAAY;AAAA,cACZ,OAAKJ,eAAA,CAAC,UAAQ,EAAA,aACS,UAAS,OAAA,CAAA;AAAA;YAGlCX,YAA+DC,MAAAgB,QAAA,GAAA;AAAA,cAAvD,MAAK;AAAA,cAAe,OAAM;AAAA,cAAQ,SAAO;AAAA;;UAGpC,UAAS,sBAAxBC,YAEUjB,MAAAkB,QAAA,GAAA;AAAA;YAFgB,UAAS;AAAA,UAAA;6BACjC,MAAe;AAAA,8CAAZ,UAAS,KAAA,GAAA,CAAA;AAAA,YAAA;;;;QAMR,cAAa,SADrBjC,UAAA,GAAAC,mBA+BM,OA/BN,YA+BM;AAAA,UA3BJE,gBAEK,MAFL,YAEKG,gBADAC,KAAE,GAAA,8BAAA,CAAA,GAAA,CAAA;AAAA,UAGPJ,gBAsBM,OAtBN,YAsBM;AAAA,8BArBJF,mBAoBMmC,UAAA,MAAAC,WAnBW,eAAc,OAAA,CAAtB,SAAI;kCADbpC,mBAoBM,OAAA;AAAA,gBAlBH,KAAK,KAAK;AAAA,gBACX,OAAM;AAAA,gBACL,4CAAO,KAAK,WAAY,CAAA,KAAK;cAAA;gBAE9Ba,YAKEC,MAAAuB,QAAA,GAAA;AAAA,kBAJS,YAAA,KAAK;AAAA,kBAAL,uBAAA,wBAAA,WAAA,KAAK,WAAQ,QAAb;AAAA,kBACR,YAAU,KAAK;AAAA,kBACf,QAAQ;AAAA,kBACR,iDAAD,MAAW;AAAA,kBAAA,GAAA,CAAA,MAAA,CAAA;AAAA,gBAAA;gBAEbnC,gBAOM,OAAA,MAAA;AAAA,kBANJA,gBAEQ,SAAA;AAAA,oBAFA,KAAK,KAAK;AAAA,oBAAI,OAAM;AAAA,qBACvBG,gBAAA,KAAK,KAAK,GAAA,GAAA,WAAA;AAAA,kBAEfH,gBAEI,KAFJ,aACKG,gBAAA,KAAK,WAAW,GAAA,CAAA;AAAA;;;;4BAQ7BL,mBAEM,OAFN,aAEMK,gBADDC,KAAE,GAAA,2BAAA,CAAA,GAAA,CAAA;AAAA,MAAA;;;;;;;;;;;;;;;;;;AC9BX,UAAM,OAAO;AAIP,UAAA,aAAaR,kBAAoB,YAAgC;AACjE,UAAA,kBAAkB,IAAqB,gBAAgB,IAAI;AAE3D,UAAA,sBAAsB,SAAS,MAAM;AAClC,aAAA,iBAAiB,QAAI,KAAC,SAAS;AAAA,IAAA,CACvC;AAED,cAAU,MAAM;AACH,iBAAA,QAAQ,QAAI,KAAC;AAAA,IAAA,CACzB;AAEK,UAAA,iBAAiB,CAAC,aAAa;AACnC,WAAK,gBAAgB,QAAQ;AAG7B,UACE,aAAa,gBAAgB,WAC7B,WAAW,UAAU,QAAA,KAAK,QAC1B;AACW,mBAAA,QAAQ,QAAA,KAAK;AAAA,MAAA;AAAA,IAC1B,CACD;;AA1DC,aAAAC,UAAA,GAAAC,mBAiBM,OAjBNC,cAiBM;AAAA,QAhBJC,gBAOM,OAPNC,cAOM;AAAA,UANJD,gBAEK,MAFLE,cACKE,gBAAAA,KAAAA,eAAe,oBAAmB,KAAA,OAAA,CAAA,GAAA,CAAA;AAAA,UAEvCJ,gBAEI,KAFJK,cACKD,gBAAAA,KAAAA,eAAe,oBAAmB,KAAA,UAAA,CAAA,GAAA,CAAA;AAAA,QAAA;QAGzCO,YAOEyB,aAAA;AAAA,sBANS,WAAU;AAAA,uEAAV,WAAU,QAAA;AAAA,UAClB,2CAA2B,WAA6BxB,MAAA,oBAAA,EAAqB,UAAUyB,KAAAA,KAAK,wBAAoB,GAAA;UAIhH,eAAY,OAAA,CAAA,MAAA,OAAA,CAAA,IAAA,CAAA,WAAE,gBAAe,QAAG;AAAA;;;;;;;;;;;;;;;;;;;ACkCjC,UAAA,mBAAmB,IAAI,KAAK;AAE5B,UAAA,eAAezC,SAAmB,SAAC,cAAkC;AACrE,UAAA,aAAaA,kBAAoB,YAAgC;AACjE,UAAA,cAAcA,kBAAoB,aAAiC;AAEnE,UAAA,qBAAqB,wBAAC,WAAsC;AAChE,YAAM,YAAY;AAClB,cAAQ,QAAQ;AAAA,QACd,KAAK;AACI,iBAAA;AAAA,YACL;AAAA,YACA,QAAQ,eAAe;AAAA,YACvB,gBAAgB,eAAe;AAAA,UACjC;AAAA,QACF,KAAK;AACI,iBAAA;AAAA,YACL;AAAA,YACA,QAAQ,eAAe;AAAA,YACvB,gBAAgB,eAAe;AAAA,UACjC;AAAA,QACF,KAAK;AAAA,QACL;AACS,iBAAA;AAAA,YACL;AAAA,YACA,QAAQ,YAAY;AAAA,YACpB,gBAAgB,YAAY;AAAA,UAC9B;AAAA,MAAA;AAAA,IAEN,GAvB2B;AAyBrB,UAAA,gBAAgB,IAAI,KAAK;AAC/B,cAAU,YAAY;AACN,oBAAA,QAAQ,MAAM,UAAU;AAAA,IAAA,CACvC;AAEK,UAAA,oBAAoB,wBAAC,YAAsB;AAAA,MAC/C,GAAG;AAAA,MACH,QAAQ,OAAO;AAAA,IAAA,IAFS;AAK1B,UAAM,UAAU;AAAA,MAAyC,MAErD;AAAA,QACE,CAAC,eAAe,YAAY;AAAA,QAC5B,CAAC,aAAa,UAAU;AAAA,QACxB,CAAC,mBAAmB,QAAM,UAAI,KAAK,GAAG,WAAW;AAAA,QAEnD,IAAI,CAAC,CAAC,MAAM,UAAU,MAAM;AAAA,QAC5B,cAAc,QAAQ,kBAAkB,IAAI,IAAI;AAAA,QAChD;AAAA,MACD,CAAA;AAAA,IACH;AAEA,UAAM,mBAAmB;AAAA,MACvB,QAAQ,MAAM,IAAI,MAAM,gBAAgB,IAAI;AAAA,IAC9C;AACM,UAAA,kBAAkB,SAAS,MAAM;AAC9B,aAAA,sBAAsB,iBAAiB,KAAK;AAAA,IAAA,CACpD;AACK,UAAA,yBAAyB,SAAS,MAAM;AAC5C,cAAQ,gBAAgB,OAAO;AAAA,QAC7B,KAAK,gBAAgB;AACnB,iBAAO,EAAE,qCAAqC;AAAA,QAChD,KAAK,gBAAgB;AACnB,iBAAO,EAAE,mCAAmC;AAAA,QAC9C;AACE,iBAAO,EAAE,kCAAkC;AAAA,MAAA;AAAA,IAC/C,CACD;;;0BAtHCiC,YA+BQjB,MAAA0B,QAAA,GAAA;AAAA,QA9BL,QAAQlC,KAAE,GAAA,iCAAA;AAAA,QACX,YAAA;AAAA,QACC,YAAY,iBAAgB;AAAA,QAC7B,WAAQ;AAAA,MAAA;QAcG,eACT,MAUE;AAAA,yBAVFJ,gBAUE,KAAA;AAAA,YARC,OAAKsB,eAAA;AAAA,wDAAoE,gBAAe,UAAKV,MAAe,eAAA,EAAC;AAAA,4CAA6D,gBAAe,UAAKA,MAAe,eAAA,EAAC;AAAA,0CAAyD,gBAAe,UAAKA,MAAe,eAAA,EAAC;AAAA;;iCADjS,uBAAsB,KAAA;AAAA;;yBAbnC,MAA8C;AAAA,WADhDf,UAAA,IAAA,GAAAC,mBAWWmC,2BAV6B,QAAO,OAAA,CAAA,CAApC,MAAM,UAAU,GAAG,UAAK;;cAC3B,KAAA,KAAK,YAAY,KAAK;AAAA,YAAA;cAEb,QAAK,kBAApBJ,YAA4BjB,MAAAE,QAAA,GAAA,EAAA,KAAA,EAAA,CAAA;cAE5BH,YAIE4B,aAAA;AAAA,gBAHS,YAAA,WAAW;AAAA,gBAAX,uBAAA,wBAAA,WAAA,WAAW,QAAK,QAAhB;AAAA,gBACR;AAAA,gBACA,eAAc,wBAAA,WAAA,iBAAA,MAAiB,KAAK,IAAI,QAA1B;AAAA,cAA0B;;;;;;;;;;;;;;;;ACqH3C,UAAA,SAAS,IAA4B,IAAI;AAEzC,UAAA,cAAc,IAAI,EAAE;AACpB,UAAA,YAAY,IAAI,EAAE;AAElB,UAAA,sBAAsB,IAAI,EAAE;AAC5B,UAAA,mBAAmB,IAAc,EAAE;AAEnC,UAAA,aAAa,IAAI,IAAI;AACrB,UAAA,eAAe,IAAI,IAAI;AACvB,UAAA,eAAe,IAAI,EAAE;AACrB,UAAA,aAAa,IAAI,EAAE;AACnB,UAAA,cAAc,IAAI,EAAE;AAGpB,UAAA,cAAc,IAAI,CAAC;AAEnB,UAAA,mBAAmB,wBAAC,UAA2B;AACnD,qBAAe,KAAK;AAER,oBAAE,OAAO,WAAW,0BAA0B;AAAA,QACxD,MAAM;AAAA,MAAA,CACP;AAAA,IACH,GANyB;AAQnB,UAAA,iBAAiB,wBAAC,UAA2B;AACjD,YAAM,MAAM,OAAO,UAAU,WAAW,QAAQ,SAAS,OAAO,EAAE;AAC9D,UAAA,CAAC,MAAM,GAAG,KAAK,MAAM,YAAY,mBAAmB,QAAQ;AAAA,IAClE,GAHuB;AAKvB,UAAM,WAAW,SAAS,MAAM,UAAU,UAAU,EAAE;AACtD,UAAM,QAAQ,SAAS,MAAM,OAAO,OAAO,UAAU,QAAQ;AAE7D,UAAM,WAAW,YAAY;AAC7B,UAAM,SAAS,UAAU;AACzB,UAAM,UAAU,mCAAY;AAC1B,YAAM,UAA0B;AAAA,QAC9B,aAAa,YAAY;AAAA,QACzB,YAAY,WAAW;AAAA,QACvB,cAAc,aAAa;AAAA,QAC3B,qBAAqB,oBAAoB;AAAA,QACzC,kBAAkB,MAAM,iBAAiB,KAAK;AAAA,QAC9C,cAAc,aAAa;AAAA,QAC3B,YAAY,WAAW;AAAA,QACvB,aAAa,YAAY;AAAA;AAAA,QAEzB,QAAQ,OAAO;AAAA,MACjB;AACA,eAAS,eAAe,OAAO;AAE/B,YAAM,WACJ,QAAQ,WAAW,gBAAgB,0BAA0B;AACzD,YAAA,OAAO,KAAK,QAAQ;AAAA,IAC5B,GAlBgB;AAoBhB,cAAU,YAAY;AACpB,UAAI,CAAC,SAAU;AAEf,YAAM,cAAc,MAAM,SAAS,OAAO,eAAe;AACrD,UAAA,gBAAgB,SAAS,gBAAgB,UAAU;AACrD,eAAO,QAAQ;AAAA,MAAA;AAGL,oBAAE,OAAO,WAAW,0BAA0B;AAAA,QACxD,MAAM;AAAA,QACN,KAAK;AAAA,MAAA,CACN;AAAA,IAAA,CACF;;uBAvMC,GAAAV,YA2GmBW,aAAA,EA3GD,MAAA,MAAI;AAAA,yBAIpB,MAsGU;AAAA,UAtGV7B,YAsGUC,MAAA6B,QAAA,GAAA;AAAA,YArGR,OAAM;AAAA,YACN,OAAM;AAAA,YACL,kBAAc;AAAA,UAAA;6BAEf,MAaW;AAAA,cAbX9B,YAaWC,MAAA8B,QAAA,GAAA,EAbD,OAAM,iBAAa;AAAA,iCAC3B,MAEO;AAAA,kBAFP/B,YAEOC,MAAA+B,QAAA,GAAA,EAFD,OAAM,OAAG;AAAA,qCACb,MAAuB;AAAA,sDAApBvC,KAAE,GAAA,aAAA,CAAA,GAAA,CAAA;AAAA,oBAAA;;;kBAEPO,YAEOC,MAAA+B,QAAA,GAAA;AAAA,oBAFD,OAAM;AAAA,oBAAK,UAAU,MAAK;AAAA,kBAAA;qCAC9B,MAAmC;AAAA,sDAAhCvC,KAAE,GAAA,yBAAA,CAAA,GAAA,CAAA;AAAA,oBAAA;;;kBAEPO,YAEOC,MAAA+B,QAAA,GAAA;AAAA,oBAFD,OAAM;AAAA,oBAAK,UAAU,MAAA,SAAS,SAAA,SAAY,YAAW,QAAA;AAAA,kBAAA;qCACzD,MAA6B;AAAA,sDAA1BvC,KAAE,GAAA,mBAAA,CAAA,GAAA,CAAA;AAAA,oBAAA;;;kBAEPO,YAEOC,MAAA+B,QAAA,GAAA;AAAA,oBAFD,OAAM;AAAA,oBAAK,UAAU,MAAA,SAAS,SAAA,SAAY,YAAW,QAAA;AAAA,kBAAA;qCACzD,MAAmC;AAAA,sDAAhCvC,KAAE,GAAA,yBAAA,CAAA,GAAA,CAAA;AAAA,oBAAA;;;;;;cAGTO,YAkFaC,MAAAgC,QAAA,GAAA,MAAA;AAAA,iCAjFX,MAWY;AAAA,kBAXZjC,YAWYC,MAAAiC,QAAA,GAAA,EAX6B,OAAM,OAAG;AAAA,oBAChD,SAAAC,QAAA,CAAqC,EADlB,uBAAgB;AAAA,sBACnCnC,YAAqC,WAAA;AAAA,wBAAlB,QAAQ,OAAM;AAAA,iFAAN,OAAM,QAAA;AAAA;sBACjCX,gBAQM,OARN,YAQM;AAAA,wBAPJW,YAMEC,MAAAgB,QAAA,GAAA;AAAA,0BALC,OAAOxB,KAAE,GAAA,QAAA;AAAA,0BACV,MAAK;AAAA,0BACL,YAAS;AAAA,0BACR,iBAAiB,OAAM,UAAA;AAAA,0BACvB,4CAAO,iBAAgB,GAAA;;;;;;kBAI9BO,YAoBYC,MAAAiC,QAAA,GAAA,EApB6B,OAAM,OAAG;AAAA,oBAChD,SAAAC,QAAA,CAGE,EAJiB,uBAAgB;AAAA,sBACnCnC,YAGEoC,aAAA;AAAA,wBAFQ,aAAa,YAAW;AAAA,sFAAX,YAAW,QAAA;AAAA,wBACxB,WAAW,UAAS;AAAA,oFAAT,UAAS,QAAA;AAAA;sBAE9B/C,gBAcM,OAdN,YAcM;AAAA,wBAbJW,YAKEC,MAAAgB,QAAA,GAAA;AAAA,0BAJC,OAAOxB,KAAE,GAAA,QAAA;AAAA,0BACV,UAAS;AAAA,0BACT,MAAK;AAAA,0BACJ,4CAAO,iBAAgB,GAAA;;wBAE1BO,YAMEC,MAAAgB,QAAA,GAAA;AAAA,0BALC,OAAOxB,KAAE,GAAA,QAAA;AAAA,0BACV,MAAK;AAAA,0BACL,YAAS;AAAA,0BACR,UAAU,UAAS,UAAA;AAAA,0BACnB,4CAAO,iBAAgB,GAAA;;;;;;kBAI9BO,YAmBYC,MAAAiC,QAAA,GAAA,EAnB6B,OAAM,OAAG;AAAA,oBAChD,SAAAC,QAAA,CAGE,EAJiB,uBAAgB;AAAA,sBACnCnC,YAGEqC,aAAA;AAAA,wBAFQ,YAAY,oBAAmB;AAAA,qFAAnB,oBAAmB,QAAA;AAAA,wBAC/B,kBAAkB,iBAAgB;AAAA,2FAAhB,iBAAgB,QAAA;AAAA;sBAE5ChD,gBAaM,OAbN,YAaM;AAAA,wBAZJW,YAKEC,MAAAgB,QAAA,GAAA;AAAA,0BAJC,OAAOxB,KAAE,GAAA,QAAA;AAAA,0BACV,UAAS;AAAA,0BACT,MAAK;AAAA,0BACJ,4CAAO,iBAAgB,GAAA;;wBAE1BO,YAKEC,MAAAgB,QAAA,GAAA;AAAA,0BAJC,OAAOxB,KAAE,GAAA,QAAA;AAAA,0BACV,MAAK;AAAA,0BACL,YAAS;AAAA,0BACR,4CAAO,iBAAgB,GAAA;;;;;;kBAI9BO,YA2BYC,MAAAiC,QAAA,GAAA,EA3B6B,OAAM,OAAG;AAAA,oBAChD,SAAAC,QAAA,CAGE,EAJiB,uBAAgB;AAAA,sBACnCnC,YAGEsC,aAAA;AAAA,wBAFQ,YAAY,WAAU;AAAA,qFAAV,WAAU,QAAA;AAAA,wBACtB,cAAc,aAAY;AAAA,uFAAZ,aAAY,QAAA;AAAA;sBAEpCtC,YAMEuC,aAAA;AAAA,wBALQ,cAAc,aAAY;AAAA,uFAAZ,aAAY,QAAA;AAAA,wBAC1B,YAAY,WAAU;AAAA,qFAAV,WAAU,QAAA;AAAA,wBACtB,aAAa,YAAW;AAAA,sFAAX,YAAW,QAAA;AAAA,wBAC/B,QAAQ,OAAM;AAAA,wBACf,OAAM;AAAA,sBAAA;sBAERlD,gBAcM,OAdN,YAcM;AAAA,wBAbJW,YAKEC,MAAAgB,QAAA,GAAA;AAAA,0BAJC,OAAOxB,KAAE,GAAA,QAAA;AAAA,0BACV,UAAS;AAAA,0BACT,MAAK;AAAA,0BACJ,4CAAO,iBAAgB,GAAA;;wBAE1BO,YAMEC,MAAAgB,QAAA,GAAA;AAAA,0BALC,OAAOxB,KAAE,GAAA,WAAA;AAAA,0BACV,MAAK;AAAA,0BACL,YAAS;AAAA,0BACR,UAAU,SAAQ;AAAA,0BAClB,iDAAO,QAAO;AAAA;;;;;;;;;;;;;;;;;;"}